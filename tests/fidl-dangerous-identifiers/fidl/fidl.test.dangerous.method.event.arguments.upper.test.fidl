// Copyright 2019 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Generated by generate.py.
library fidl.test.dangerous.method.event.arguments.upper;
using argtype = uint32;
protocol DangerousResponseArguments {
  -> Event0(argtype ABSTRACT);
  -> Event1(argtype ALIGNAS);
  -> Event2(argtype ALIGNOF);
  -> Event3(argtype AND);
  -> Event4(argtype AND_EQ);
  -> Event5(argtype AS);
  -> Event6(argtype ASM);
  -> Event7(argtype ASSERT);
  -> Event8(argtype ASYNC);
  -> Event9(argtype ATOMIC_CANCEL);
  -> Event10(argtype ATOMIC_COMMIT);
  -> Event11(argtype ATOMIC_NOEXCEPT);
  -> Event12(argtype AUTO);
  -> Event13(argtype AWAIT);
  -> Event14(argtype BECOME);
  -> Event15(argtype BITAND);
  -> Event16(argtype BITOR);
  -> Event17(argtype BOOL);
  -> Event18(argtype BOX);
  -> Event19(argtype BREAK);
  -> Event20(argtype BYTE);
  -> Event21(argtype CASE);
  -> Event22(argtype CATCH);
  -> Event23(argtype CHAN);
  -> Event24(argtype CHAR);
  -> Event25(argtype CHAR16_T);
  -> Event26(argtype CHAR32_T);
  -> Event27(argtype CLASS);
  -> Event28(argtype CO_AWAIT);
  -> Event29(argtype CO_RETURN);
  -> Event30(argtype CO_YIELD);
  -> Event31(argtype CODING_TRAITS);
  -> Event32(argtype COMPL);
  -> Event33(argtype CONCEPT);
  -> Event34(argtype CONST);
  -> Event35(argtype CONST_CAST);
  -> Event36(argtype CONSTEXPR);
  -> Event37(argtype CONTINUE);
  -> Event38(argtype CONTROLLER);
  -> Event39(argtype COVARIANT);
  -> Event40(argtype CRATE);
  -> Event41(argtype DECLTYPE);
  -> Event42(argtype DECODER);
  -> Event43(argtype DEFAULT);
  -> Event44(argtype DEFER);
  -> Event45(argtype DEFERRED);
  -> Event46(argtype DELETE);
  -> Event47(argtype DO);
  -> Event48(argtype DOUBLE);
  -> Event49(argtype DYNAMIC);
  -> Event50(argtype DYNAMIC_CAST);
  -> Event51(argtype ELSE);
  -> Event52(argtype ENCODER);
  -> Event53(argtype ENSURE_VALUES_INSTANTIATED);
  -> Event54(argtype ENUM);
  -> Event55(argtype ERR);
  -> Event56(argtype EXPLICIT);
  -> Event57(argtype EXPORT);
  -> Event58(argtype EXTENDS);
  -> Event59(argtype EXTERN);
  -> Event60(argtype EXTERNAL);
  -> Event61(argtype FACTORY);
  -> Event62(argtype FALLTHROUGH);
  -> Event63(argtype FALSE);
  -> Event64(argtype FIDL);
  -> Event65(argtype FIDL_TYPE);
  -> Event66(argtype FINAL);
  -> Event67(argtype FINALLY);
  -> Event68(argtype FLOAT);
  -> Event69(argtype FN);
  -> Event70(argtype FOR);
  -> Event71(argtype FRIEND);
  -> Event72(argtype FUNC);
  -> Event73(argtype FUTURE);
  -> Event74(argtype FUTURES);
  -> Event75(argtype GET);
  -> Event76(argtype GO);
  -> Event77(argtype GOTO);
  -> Event78(argtype HAS_INVALID_TAG);
  -> Event79(argtype HASH_CODE);
  -> Event80(argtype IF);
  -> Event81(argtype IMPL);
  -> Event82(argtype IMPLEMENTS);
  -> Event83(argtype IMPORT);
  -> Event84(argtype IN);
  -> Event85(argtype INDEX);
  -> Event86(argtype INLINE);
  -> Event87(argtype INT);
  -> Event88(argtype INT16);
  -> Event89(argtype INT32);
  -> Event90(argtype INT64);
  -> Event91(argtype INT8);
  -> Event92(argtype INTERFACE);
  -> Event93(argtype IS);
  -> Event94(argtype LET);
  -> Event95(argtype LHS);
  -> Event96(argtype LIBRARY);
  -> Event97(argtype LIST);
  -> Event98(argtype LONG);
  -> Event99(argtype LOOP);
  -> Event100(argtype MACRO);
  -> Event101(argtype MAP);
  -> Event102(argtype MATCH);
  -> Event103(argtype MIXIN);
  -> Event104(argtype MOD);
  -> Event105(argtype MODULE);
  -> Event106(argtype MOVE);
  -> Event107(argtype MUT);
  -> Event108(argtype MUTABLE);
  -> Event109(argtype NAMESPACE);
  -> Event110(argtype NEVER);
  -> Event111(argtype NEW);
  -> Event112(argtype NO_SUCH_METHOD);
  -> Event113(argtype NOEXCEPT);
  -> Event114(argtype NONE);
  -> Event115(argtype NOT);
  -> Event116(argtype NOT_EQ);
  -> Event117(argtype NULL);
  -> Event118(argtype NULLPTR);
  -> Event119(argtype NUM);
  -> Event120(argtype OBJECT);
  -> Event121(argtype OFFSET);
  -> Event122(argtype OFFSETOF);
  -> Event123(argtype OK);
  -> Event124(argtype ON_OPEN);
  -> Event125(argtype OPERATOR);
  -> Event126(argtype OPTION);
  -> Event127(argtype OR);
  -> Event128(argtype OR_EQ);
  -> Event129(argtype OVERRIDE);
  -> Event130(argtype PACKAGE);
  -> Event131(argtype PART);
  -> Event132(argtype PRIV);
  -> Event133(argtype PRIVATE);
  -> Event134(argtype PROC);
  -> Event135(argtype PROTECTED);
  -> Event136(argtype PROXY);
  -> Event137(argtype PUB);
  -> Event138(argtype PUBLIC);
  -> Event139(argtype PURE);
  -> Event140(argtype RANGE);
  -> Event141(argtype REF);
  -> Event142(argtype REGISTER);
  -> Event143(argtype REINTERPRET_CAST);
  -> Event144(argtype REQUIRES);
  -> Event145(argtype RESULT);
  -> Event146(argtype RETHROW);
  -> Event147(argtype RETURN);
  -> Event148(argtype RHS);
  -> Event149(argtype RUNE);
  -> Event150(argtype RUNTIME_TYPE);
  -> Event151(argtype SELECT);
  -> Event152(argtype SELF);
  -> Event153(argtype SEND);
  -> Event154(argtype SET);
  -> Event155(argtype SET_CONTROLLER);
  -> Event156(argtype SHORT);
  -> Event157(argtype SIGNED);
  -> Event158(argtype SIZEOF);
  -> Event159(argtype SOME);
  -> Event160(argtype STATIC);
  -> Event161(argtype STATIC_ASSERT);
  -> Event162(argtype STATIC_CAST);
  -> Event163(argtype STREAM);
  -> Event164(argtype STRING);
  -> Event165(argtype STRUCT);
  -> Event166(argtype STUB);
  -> Event167(argtype SUPER);
  -> Event168(argtype SWITCH);
  -> Event169(argtype SYNCHRONIZED);
  -> Event170(argtype TEMPLATE);
  -> Event171(argtype THIS);
  -> Event172(argtype THREAD_LOCAL);
  -> Event173(argtype THROW);
  -> Event174(argtype TO_STRING);
  -> Event175(argtype TRAIT);
  -> Event176(argtype TRUE);
  -> Event177(argtype TRY);
  -> Event178(argtype TYPE);
  -> Event179(argtype TYPEDEF);
  -> Event180(argtype TYPEID);
  -> Event181(argtype TYPENAME);
  -> Event182(argtype TYPEOF);
  -> Event183(argtype UINT16);
  -> Event184(argtype UINT32);
  -> Event185(argtype UINT64);
  -> Event186(argtype UINT8);
  -> Event187(argtype UNION);
  -> Event188(argtype UNSAFE);
  -> Event189(argtype UNSIGNED);
  -> Event190(argtype UNSIZED);
  -> Event191(argtype USE);
  -> Event192(argtype USING);
  -> Event193(argtype VALUE);
  -> Event194(argtype VALUE_OF);
  -> Event195(argtype VALUE_UNION);
  -> Event196(argtype VALUES_MAP);
  -> Event197(argtype VAR);
  -> Event198(argtype VEC);
  -> Event199(argtype VIRTUAL);
  -> Event200(argtype VOID);
  -> Event201(argtype VOLATILE);
  -> Event202(argtype WCHAR_T);
  -> Event203(argtype WHERE);
  -> Event204(argtype WHICH);
  -> Event205(argtype WHILE);
  -> Event206(argtype WITH);
  -> Event207(argtype XOR);
  -> Event208(argtype XOR_EQ);
  -> Event209(argtype XUNION);
  -> Event210(argtype YIELD);
  -> Event211(argtype ZX);
};
