// Copyright 2019 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Generated by generate.py.
library fidl.test.dangerous.method.event.arguments.camel;
using argtype = uint32;
protocol DangerousResponseArguments {
  -> Event0(argtype Abstract);
  -> Event1(argtype Alignas);
  -> Event2(argtype Alignof);
  -> Event3(argtype And);
  -> Event4(argtype AndEq);
  -> Event5(argtype As);
  -> Event6(argtype Asm);
  -> Event7(argtype Assert);
  -> Event8(argtype Async);
  -> Event9(argtype AtomicCancel);
  -> Event10(argtype AtomicCommit);
  -> Event11(argtype AtomicNoexcept);
  -> Event12(argtype Auto);
  -> Event13(argtype Await);
  -> Event14(argtype Become);
  -> Event15(argtype Bitand);
  -> Event16(argtype Bitor);
  -> Event17(argtype Bool);
  -> Event18(argtype Box);
  -> Event19(argtype Break);
  -> Event20(argtype Byte);
  -> Event21(argtype Case);
  -> Event22(argtype Catch);
  -> Event23(argtype Chan);
  -> Event24(argtype Char);
  -> Event25(argtype Char16T);
  -> Event26(argtype Char32T);
  -> Event27(argtype Class);
  -> Event28(argtype CoAwait);
  -> Event29(argtype CoReturn);
  -> Event30(argtype CoYield);
  -> Event31(argtype CodingTraits);
  -> Event32(argtype Compl);
  -> Event33(argtype Concept);
  -> Event34(argtype Const);
  -> Event35(argtype ConstCast);
  -> Event36(argtype Constexpr);
  -> Event37(argtype Continue);
  -> Event38(argtype Controller);
  -> Event39(argtype Covariant);
  -> Event40(argtype Crate);
  -> Event41(argtype Decltype);
  -> Event42(argtype Decoder);
  -> Event43(argtype Default);
  -> Event44(argtype Defer);
  -> Event45(argtype Deferred);
  -> Event46(argtype Delete);
  -> Event47(argtype Do);
  -> Event48(argtype Double);
  -> Event49(argtype Dynamic);
  -> Event50(argtype DynamicCast);
  -> Event51(argtype Else);
  -> Event52(argtype Encoder);
  -> Event53(argtype EnsureValuesInstantiated);
  -> Event54(argtype Enum);
  -> Event55(argtype Err);
  -> Event56(argtype Explicit);
  -> Event57(argtype Export);
  -> Event58(argtype Extends);
  -> Event59(argtype Extern);
  -> Event60(argtype External);
  -> Event61(argtype Factory);
  -> Event62(argtype Fallthrough);
  -> Event63(argtype False);
  -> Event64(argtype Fidl);
  -> Event65(argtype FidlType);
  -> Event66(argtype Final);
  -> Event67(argtype Finally);
  -> Event68(argtype Float);
  -> Event69(argtype Fn);
  -> Event70(argtype For);
  -> Event71(argtype Friend);
  -> Event72(argtype Func);
  -> Event73(argtype Future);
  -> Event74(argtype Futures);
  -> Event75(argtype Get);
  -> Event76(argtype Go);
  -> Event77(argtype Goto);
  -> Event78(argtype HasInvalidTag);
  -> Event79(argtype HashCode);
  -> Event80(argtype If);
  -> Event81(argtype Impl);
  -> Event82(argtype Implements);
  -> Event83(argtype Import);
  -> Event84(argtype In);
  -> Event85(argtype Index);
  -> Event86(argtype Inline);
  -> Event87(argtype Int);
  -> Event88(argtype Int16);
  -> Event89(argtype Int32);
  -> Event90(argtype Int64);
  -> Event91(argtype Int8);
  -> Event92(argtype Interface);
  -> Event93(argtype Is);
  -> Event94(argtype Let);
  -> Event95(argtype Lhs);
  -> Event96(argtype Library);
  -> Event97(argtype List);
  -> Event98(argtype Long);
  -> Event99(argtype Loop);
  -> Event100(argtype Macro);
  -> Event101(argtype Map);
  -> Event102(argtype Match);
  -> Event103(argtype Mixin);
  -> Event104(argtype Mod);
  -> Event105(argtype Module);
  -> Event106(argtype Move);
  -> Event107(argtype Mut);
  -> Event108(argtype Mutable);
  -> Event109(argtype Namespace);
  -> Event110(argtype Never);
  -> Event111(argtype New);
  -> Event112(argtype NoSuchMethod);
  -> Event113(argtype Noexcept);
  -> Event114(argtype None);
  -> Event115(argtype Not);
  -> Event116(argtype NotEq);
  -> Event117(argtype Null);
  -> Event118(argtype Nullptr);
  -> Event119(argtype Num);
  -> Event120(argtype Object);
  -> Event121(argtype Offset);
  -> Event122(argtype Offsetof);
  -> Event123(argtype Ok);
  -> Event124(argtype OnOpen);
  -> Event125(argtype Operator);
  -> Event126(argtype Option);
  -> Event127(argtype Or);
  -> Event128(argtype OrEq);
  -> Event129(argtype Override);
  -> Event130(argtype Package);
  -> Event131(argtype Part);
  -> Event132(argtype Priv);
  -> Event133(argtype Private);
  -> Event134(argtype Proc);
  -> Event135(argtype Protected);
  -> Event136(argtype Proxy);
  -> Event137(argtype Pub);
  -> Event138(argtype Public);
  -> Event139(argtype Pure);
  -> Event140(argtype Range);
  -> Event141(argtype Ref);
  -> Event142(argtype Register);
  -> Event143(argtype ReinterpretCast);
  -> Event144(argtype Requires);
  -> Event145(argtype Result);
  -> Event146(argtype Rethrow);
  -> Event147(argtype Return);
  -> Event148(argtype Rhs);
  -> Event149(argtype Rune);
  -> Event150(argtype RuntimeType);
  -> Event151(argtype Select);
  -> Event152(argtype Self);
  -> Event153(argtype Send);
  -> Event154(argtype Set);
  -> Event155(argtype SetController);
  -> Event156(argtype Short);
  -> Event157(argtype Signed);
  -> Event158(argtype Sizeof);
  -> Event159(argtype Some);
  -> Event160(argtype Static);
  -> Event161(argtype StaticAssert);
  -> Event162(argtype StaticCast);
  -> Event163(argtype Stream);
  -> Event164(argtype String);
  -> Event165(argtype Struct);
  -> Event166(argtype Stub);
  -> Event167(argtype Super);
  -> Event168(argtype Switch);
  -> Event169(argtype Synchronized);
  -> Event170(argtype Template);
  -> Event171(argtype This);
  -> Event172(argtype ThreadLocal);
  -> Event173(argtype Throw);
  -> Event174(argtype ToString);
  -> Event175(argtype Trait);
  -> Event176(argtype True);
  -> Event177(argtype Try);
  -> Event178(argtype Type);
  -> Event179(argtype Typedef);
  -> Event180(argtype Typeid);
  -> Event181(argtype Typename);
  -> Event182(argtype Typeof);
  -> Event183(argtype Uint16);
  -> Event184(argtype Uint32);
  -> Event185(argtype Uint64);
  -> Event186(argtype Uint8);
  -> Event187(argtype Union);
  -> Event188(argtype Unsafe);
  -> Event189(argtype Unsigned);
  -> Event190(argtype Unsized);
  -> Event191(argtype Use);
  -> Event192(argtype Using);
  -> Event193(argtype Value);
  -> Event194(argtype ValueOf);
  -> Event195(argtype ValueUnion);
  -> Event196(argtype ValuesMap);
  -> Event197(argtype Var);
  -> Event198(argtype Vec);
  -> Event199(argtype Virtual);
  -> Event200(argtype Void);
  -> Event201(argtype Volatile);
  -> Event202(argtype WcharT);
  -> Event203(argtype Where);
  -> Event204(argtype Which);
  -> Event205(argtype While);
  -> Event206(argtype With);
  -> Event207(argtype Xor);
  -> Event208(argtype XorEq);
  -> Event209(argtype Xunion);
  -> Event210(argtype Yield);
  -> Event211(argtype Zx);
};
