// Copyright 2019 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Generated by generate.py.
library fidl.test.dangerous.table.names.upper;
using membertype = uint32;
table ABSTRACT { 1: membertype member; };
table ALIGNAS { 1: membertype member; };
table ALIGNOF { 1: membertype member; };
table AND { 1: membertype member; };
table AND_EQ { 1: membertype member; };
table AS { 1: membertype member; };
table ASM { 1: membertype member; };
table ASSERT { 1: membertype member; };
table ASYNC { 1: membertype member; };
table ATOMIC_CANCEL { 1: membertype member; };
table ATOMIC_COMMIT { 1: membertype member; };
table ATOMIC_NOEXCEPT { 1: membertype member; };
table AUTO { 1: membertype member; };
table AWAIT { 1: membertype member; };
table BECOME { 1: membertype member; };
table BITAND { 1: membertype member; };
table BITOR { 1: membertype member; };
table BOOL { 1: membertype member; };
table BOX { 1: membertype member; };
table BREAK { 1: membertype member; };
table BYTE { 1: membertype member; };
table CASE { 1: membertype member; };
table CATCH { 1: membertype member; };
table CHAN { 1: membertype member; };
table CHAR { 1: membertype member; };
table CHAR16_T { 1: membertype member; };
table CHAR32_T { 1: membertype member; };
table CLASS { 1: membertype member; };
table CO_AWAIT { 1: membertype member; };
table CO_RETURN { 1: membertype member; };
table CO_YIELD { 1: membertype member; };
table CODING_TRAITS { 1: membertype member; };
table COMPL { 1: membertype member; };
table CONCEPT { 1: membertype member; };
table CONST { 1: membertype member; };
table CONST_CAST { 1: membertype member; };
table CONSTEXPR { 1: membertype member; };
table CONTINUE { 1: membertype member; };
table CONTROLLER { 1: membertype member; };
table COVARIANT { 1: membertype member; };
table CRATE { 1: membertype member; };
table DECLTYPE { 1: membertype member; };
table DECODER { 1: membertype member; };
table DEFAULT { 1: membertype member; };
table DEFER { 1: membertype member; };
table DEFERRED { 1: membertype member; };
table DELETE { 1: membertype member; };
table DO { 1: membertype member; };
table DOUBLE { 1: membertype member; };
table DYNAMIC { 1: membertype member; };
table DYNAMIC_CAST { 1: membertype member; };
table ELSE { 1: membertype member; };
table ENCODER { 1: membertype member; };
table ENSURE_VALUES_INSTANTIATED { 1: membertype member; };
table ENUM { 1: membertype member; };
table ERR { 1: membertype member; };
table EXPLICIT { 1: membertype member; };
table EXPORT { 1: membertype member; };
table EXTENDS { 1: membertype member; };
table EXTERN { 1: membertype member; };
table EXTERNAL { 1: membertype member; };
table FACTORY { 1: membertype member; };
table FALLTHROUGH { 1: membertype member; };
table FALSE { 1: membertype member; };
table FIDL { 1: membertype member; };
table FIDL_TYPE { 1: membertype member; };
table FINAL { 1: membertype member; };
table FINALLY { 1: membertype member; };
table FLOAT { 1: membertype member; };
table FN { 1: membertype member; };
table FOR { 1: membertype member; };
table FRIEND { 1: membertype member; };
table FUNC { 1: membertype member; };
table FUTURE { 1: membertype member; };
table FUTURES { 1: membertype member; };
table GET { 1: membertype member; };
table GO { 1: membertype member; };
table GOTO { 1: membertype member; };
table HAS_INVALID_TAG { 1: membertype member; };
table HASH_CODE { 1: membertype member; };
table IF { 1: membertype member; };
table IMPL { 1: membertype member; };
table IMPLEMENTS { 1: membertype member; };
table IMPORT { 1: membertype member; };
table IN { 1: membertype member; };
table INDEX { 1: membertype member; };
table INLINE { 1: membertype member; };
table INT { 1: membertype member; };
table INT16 { 1: membertype member; };
table INT32 { 1: membertype member; };
table INT64 { 1: membertype member; };
table INT8 { 1: membertype member; };
table INTERFACE { 1: membertype member; };
table IS { 1: membertype member; };
table LET { 1: membertype member; };
table LHS { 1: membertype member; };
table LIBRARY { 1: membertype member; };
table LIST { 1: membertype member; };
table LONG { 1: membertype member; };
table LOOP { 1: membertype member; };
table MACRO { 1: membertype member; };
table MAP { 1: membertype member; };
table MATCH { 1: membertype member; };
table MIXIN { 1: membertype member; };
table MOD { 1: membertype member; };
table MODULE { 1: membertype member; };
table MOVE { 1: membertype member; };
table MUT { 1: membertype member; };
table MUTABLE { 1: membertype member; };
table NAMESPACE { 1: membertype member; };
table NEVER { 1: membertype member; };
table NEW { 1: membertype member; };
table NO_SUCH_METHOD { 1: membertype member; };
table NOEXCEPT { 1: membertype member; };
table NONE { 1: membertype member; };
table NOT { 1: membertype member; };
table NOT_EQ { 1: membertype member; };
table NULL { 1: membertype member; };
table NULLPTR { 1: membertype member; };
table NUM { 1: membertype member; };
table OBJECT { 1: membertype member; };
table OFFSET { 1: membertype member; };
table OFFSETOF { 1: membertype member; };
table OK { 1: membertype member; };
table ON_OPEN { 1: membertype member; };
table OPERATOR { 1: membertype member; };
table OPTION { 1: membertype member; };
table OR { 1: membertype member; };
table OR_EQ { 1: membertype member; };
table OVERRIDE { 1: membertype member; };
table PACKAGE { 1: membertype member; };
table PART { 1: membertype member; };
table PRIV { 1: membertype member; };
table PRIVATE { 1: membertype member; };
table PROC { 1: membertype member; };
table PROTECTED { 1: membertype member; };
table PROXY { 1: membertype member; };
table PUB { 1: membertype member; };
table PUBLIC { 1: membertype member; };
table PURE { 1: membertype member; };
table RANGE { 1: membertype member; };
table REF { 1: membertype member; };
table REGISTER { 1: membertype member; };
table REINTERPRET_CAST { 1: membertype member; };
table REQUIRES { 1: membertype member; };
table RESULT { 1: membertype member; };
table RETHROW { 1: membertype member; };
table RETURN { 1: membertype member; };
table RHS { 1: membertype member; };
table RUNE { 1: membertype member; };
table RUNTIME_TYPE { 1: membertype member; };
table SELECT { 1: membertype member; };
table SELF { 1: membertype member; };
table SEND { 1: membertype member; };
table SET { 1: membertype member; };
table SET_CONTROLLER { 1: membertype member; };
table SHORT { 1: membertype member; };
table SIGNED { 1: membertype member; };
table SIZEOF { 1: membertype member; };
table SOME { 1: membertype member; };
table STATIC { 1: membertype member; };
table STATIC_ASSERT { 1: membertype member; };
table STATIC_CAST { 1: membertype member; };
table STREAM { 1: membertype member; };
table STRING { 1: membertype member; };
table STRUCT { 1: membertype member; };
table STUB { 1: membertype member; };
table SUPER { 1: membertype member; };
table SWITCH { 1: membertype member; };
table SYNCHRONIZED { 1: membertype member; };
table TEMPLATE { 1: membertype member; };
table THIS { 1: membertype member; };
table THREAD_LOCAL { 1: membertype member; };
table THROW { 1: membertype member; };
table TO_STRING { 1: membertype member; };
table TRAIT { 1: membertype member; };
table TRUE { 1: membertype member; };
table TRY { 1: membertype member; };
table TYPE { 1: membertype member; };
table TYPEDEF { 1: membertype member; };
table TYPEID { 1: membertype member; };
table TYPENAME { 1: membertype member; };
table TYPEOF { 1: membertype member; };
table UINT16 { 1: membertype member; };
table UINT32 { 1: membertype member; };
table UINT64 { 1: membertype member; };
table UINT8 { 1: membertype member; };
table UNION { 1: membertype member; };
table UNSAFE { 1: membertype member; };
table UNSIGNED { 1: membertype member; };
table UNSIZED { 1: membertype member; };
table USE { 1: membertype member; };
table USING { 1: membertype member; };
table VALUE { 1: membertype member; };
table VALUE_OF { 1: membertype member; };
table VALUE_UNION { 1: membertype member; };
table VALUES_MAP { 1: membertype member; };
table VAR { 1: membertype member; };
table VEC { 1: membertype member; };
table VIRTUAL { 1: membertype member; };
table VOID { 1: membertype member; };
table VOLATILE { 1: membertype member; };
table WCHAR_T { 1: membertype member; };
table WHERE { 1: membertype member; };
table WHICH { 1: membertype member; };
table WHILE { 1: membertype member; };
table WITH { 1: membertype member; };
table XOR { 1: membertype member; };
table XOR_EQ { 1: membertype member; };
table XUNION { 1: membertype member; };
table YIELD { 1: membertype member; };
table ZX { 1: membertype member; };
table DangerousMembers {
  1: ABSTRACT f0;
  2: ALIGNAS f1;
  3: ALIGNOF f2;
  4: AND f3;
  5: AND_EQ f4;
  6: AS f5;
  7: ASM f6;
  8: ASSERT f7;
  9: ASYNC f8;
  10: ATOMIC_CANCEL f9;
  11: ATOMIC_COMMIT f10;
  12: ATOMIC_NOEXCEPT f11;
  13: AUTO f12;
  14: AWAIT f13;
  15: BECOME f14;
  16: BITAND f15;
  17: BITOR f16;
  18: BOOL f17;
  19: BOX f18;
  20: BREAK f19;
  21: BYTE f20;
  22: CASE f21;
  23: CATCH f22;
  24: CHAN f23;
  25: CHAR f24;
  26: CHAR16_T f25;
  27: CHAR32_T f26;
  28: CLASS f27;
  29: CO_AWAIT f28;
  30: CO_RETURN f29;
  31: CO_YIELD f30;
  32: CODING_TRAITS f31;
  33: COMPL f32;
  34: CONCEPT f33;
  35: CONST f34;
  36: CONST_CAST f35;
  37: CONSTEXPR f36;
  38: CONTINUE f37;
  39: CONTROLLER f38;
  40: COVARIANT f39;
  41: CRATE f40;
  42: DECLTYPE f41;
  43: DECODER f42;
  44: DEFAULT f43;
  45: DEFER f44;
  46: DEFERRED f45;
  47: DELETE f46;
  48: DO f47;
  49: DOUBLE f48;
  50: DYNAMIC f49;
  51: DYNAMIC_CAST f50;
  52: ELSE f51;
  53: ENCODER f52;
  54: ENSURE_VALUES_INSTANTIATED f53;
  55: ENUM f54;
  56: ERR f55;
  57: EXPLICIT f56;
  58: EXPORT f57;
  59: EXTENDS f58;
  60: EXTERN f59;
  61: EXTERNAL f60;
  62: FACTORY f61;
  63: FALLTHROUGH f62;
  64: FALSE f63;
  65: FIDL f64;
  66: FIDL_TYPE f65;
  67: FINAL f66;
  68: FINALLY f67;
  69: FLOAT f68;
  70: FN f69;
  71: FOR f70;
  72: FRIEND f71;
  73: FUNC f72;
  74: FUTURE f73;
  75: FUTURES f74;
  76: GET f75;
  77: GO f76;
  78: GOTO f77;
  79: HAS_INVALID_TAG f78;
  80: HASH_CODE f79;
  81: IF f80;
  82: IMPL f81;
  83: IMPLEMENTS f82;
  84: IMPORT f83;
  85: IN f84;
  86: INDEX f85;
  87: INLINE f86;
  88: INT f87;
  89: INT16 f88;
  90: INT32 f89;
  91: INT64 f90;
  92: INT8 f91;
  93: INTERFACE f92;
  94: IS f93;
  95: LET f94;
  96: LHS f95;
  97: LIBRARY f96;
  98: LIST f97;
  99: LONG f98;
  100: LOOP f99;
  101: MACRO f100;
  102: MAP f101;
  103: MATCH f102;
  104: MIXIN f103;
  105: MOD f104;
  106: MODULE f105;
  107: MOVE f106;
  108: MUT f107;
  109: MUTABLE f108;
  110: NAMESPACE f109;
  111: NEVER f110;
  112: NEW f111;
  113: NO_SUCH_METHOD f112;
  114: NOEXCEPT f113;
  115: NONE f114;
  116: NOT f115;
  117: NOT_EQ f116;
  118: NULL f117;
  119: NULLPTR f118;
  120: NUM f119;
  121: OBJECT f120;
  122: OFFSET f121;
  123: OFFSETOF f122;
  124: OK f123;
  125: ON_OPEN f124;
  126: OPERATOR f125;
  127: OPTION f126;
  128: OR f127;
  129: OR_EQ f128;
  130: OVERRIDE f129;
  131: PACKAGE f130;
  132: PART f131;
  133: PRIV f132;
  134: PRIVATE f133;
  135: PROC f134;
  136: PROTECTED f135;
  137: PROXY f136;
  138: PUB f137;
  139: PUBLIC f138;
  140: PURE f139;
  141: RANGE f140;
  142: REF f141;
  143: REGISTER f142;
  144: REINTERPRET_CAST f143;
  145: REQUIRES f144;
  146: RESULT f145;
  147: RETHROW f146;
  148: RETURN f147;
  149: RHS f148;
  150: RUNE f149;
  151: RUNTIME_TYPE f150;
  152: SELECT f151;
  153: SELF f152;
  154: SEND f153;
  155: SET f154;
  156: SET_CONTROLLER f155;
  157: SHORT f156;
  158: SIGNED f157;
  159: SIZEOF f158;
  160: SOME f159;
  161: STATIC f160;
  162: STATIC_ASSERT f161;
  163: STATIC_CAST f162;
  164: STREAM f163;
  165: STRING f164;
  166: STRUCT f165;
  167: STUB f166;
  168: SUPER f167;
  169: SWITCH f168;
  170: SYNCHRONIZED f169;
  171: TEMPLATE f170;
  172: THIS f171;
  173: THREAD_LOCAL f172;
  174: THROW f173;
  175: TO_STRING f174;
  176: TRAIT f175;
  177: TRUE f176;
  178: TRY f177;
  179: TYPE f178;
  180: TYPEDEF f179;
  181: TYPEID f180;
  182: TYPENAME f181;
  183: TYPEOF f182;
  184: UINT16 f183;
  185: UINT32 f184;
  186: UINT64 f185;
  187: UINT8 f186;
  188: UNION f187;
  189: UNSAFE f188;
  190: UNSIGNED f189;
  191: UNSIZED f190;
  192: USE f191;
  193: USING f192;
  194: VALUE f193;
  195: VALUE_OF f194;
  196: VALUE_UNION f195;
  197: VALUES_MAP f196;
  198: VAR f197;
  199: VEC f198;
  200: VIRTUAL f199;
  201: VOID f200;
  202: VOLATILE f201;
  203: WCHAR_T f202;
  204: WHERE f203;
  205: WHICH f204;
  206: WHILE f205;
  207: WITH f206;
  208: XOR f207;
  209: XOR_EQ f208;
  210: XUNION f209;
  211: YIELD f210;
  212: ZX f211;
};
