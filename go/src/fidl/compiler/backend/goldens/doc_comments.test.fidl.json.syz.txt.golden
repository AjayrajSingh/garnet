# Copyright 2018 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be found in the LICENSE file.
#
# WARNING: This file is machine generated by fidlgen.

include <test/name/c/fidl.h>
test_name_StructInLine {
       field int32
} [packed]
test_name_StructOutOfLine {
       void void
} [packed]
test_name_StructHandles {
       void void
} [packed]
test_name_UnionInLine [
       field fidl_union_member[test_name_UnionTag_Field, int32]
]
test_name_UnionOutOfLine [
       void void
][varlen]
test_name_UnionHandles [
       void void
][varlen]


test_name_InterfaceMethodRequest {
       hdr fidl_message_header[1061382220]
} [packed]
test_name_InterfaceMethodRequestHandles {
       void void
} [packed]
test_name_InterfaceOnEventEvent {
       hdr fidl_message_header[325918733]
} [packed]
test_name_InterfaceOnEventEventHandles {
       void void
} [packed]

resource zx_chan_test_name_Interface_client[zx_chan]
resource zx_chan_test_name_Interface_server[zx_chan]

zx_channel_create$test_name_Interface(options const[0], out0 ptr[out, zx_chan_test_name_Interface_client], out1 ptr[out, zx_chan_test_name_Interface_server])
fdio_service_connect$test_name_Interface(path ptr[in, string["/svc/"]], handle zx_chan_test_name_Interface_server)
zx_channel_write$test_name_InterfaceMethod(handle zx_chan_test_name_Interface_client, options const[0], bytes ptr[in, test_name_InterfaceMethodRequest], num_bytes bytesize[bytes], handles ptr[in, test_name_InterfaceMethodRequestHandles], num_handles bytesize[handles])
zx_channel_read$test_name_InterfaceOnEvent(handle zx_chan_test_name_Interface_client, options const[0], bytes ptr[out, array[int8, ZX_CHANNEL_MAX_MSG_BYTES]], num_bytes bytesize[bytes], handles ptr[out, test_name_InterfaceOnEventEventHandles], num_handles bytesize[handles], actual_bytes ptr[out, int32], actual_handles ptr[out, int32])

